<Grid x:Class="CutCode.AddView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CutCode"
	  xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
      d:DataContext="{d:DesignInstance local:AddViewModel}"
      xmlns:s="https://github.com/canton7/Stylet"
      mc:Ignorable="d">

    <Grid.Resources>
        <local:HighlightingDefinitionConverter x:Key="HighlightingDefinitionConverter"/>
        <Style x:Key="textBoxStyle" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="8">
                            <ContentPresenter Margin="5,5,5,5"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Grid.Resources>

    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>

    <Grid Grid.Row="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Column="0">
            <Border BorderThickness="0" Background="{Binding textBoxBackground}" Margin="10,18,5,5" CornerRadius="8" Height="38">
                <Grid>
                    <TextBox x:Name="titleEntry" MaxLength="40" Margin="5,0,25,0"  Width="400" VerticalContentAlignment="Center"
                     Background="{Binding textBoxBackground}" Foreground="{Binding textBoxForeground}" 
                     Text="{Binding title}" FontFamily="{StaticResource poppins_regular}" FontSize="15" BorderThickness="0"/>

                    <TextBlock Text="Title" FontSize="15" FontFamily="{StaticResource poppins_regular}" 
                        IsHitTestVisible="False" Foreground="#929292" Margin="10,7,0,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=titleEntry}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
        </Grid>

        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Language" FontFamily="{StaticResource poppins_regular}" Foreground="{Binding textBoxForeground}"/>
            <ComboBox Grid.Row="1" Style="{StaticResource comboBoxStyle}" Background="{Binding textBoxBackground}" Width="130" Margin="5,0,0,0"
                      SelectedIndex="0" SelectedValue="{Binding CurrentLang}"
                      BorderBrush="{Binding textBoxBackground}" ItemsSource="{Binding AllLangs}" Foreground="{Binding textBoxForeground}" FontFamily="{StaticResource poppins_regular}">
                <ComboBox.Resources>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </ComboBox.Resources>
            </ComboBox>
        </Grid>
    </Grid>

    <Border Grid.Row="1" BorderThickness="0" Background="{Binding textBoxBackground}" Margin="10,15,5,5" CornerRadius="8" Height="68" HorizontalAlignment="Left" Width="600">
        <Grid>
            <TextBox x:Name="descEntry" Margin="5,7,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MaxLength="120" 
                     Background="{Binding textBoxBackground}" Foreground="{Binding textBoxForeground}" TextWrapping="Wrap"
                     Text="{Binding desc}" FontFamily="{StaticResource poppins_regular}" FontSize="15" BorderThickness="0"/>

            <TextBlock Text="Description" FontSize="15" FontFamily="{StaticResource poppins_regular}" 
                        IsHitTestVisible="False" Foreground="#929292" Margin="10,7,0,0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=descEntry}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </Border>

    <Border Grid.Row="2" BorderThickness="0" Background="{Binding richtextBoxBackground}" Margin="10,15,12,5" CornerRadius="8" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <local:BindableAvalonEditor
                xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                Background="Transparent"
                Foreground="{Binding textBoxForeground}"
                BorderThickness="0"
                Margin="5,9,0,0"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                FontFamily="{StaticResource firacode}"
                FontSize="14"
                ShowLineNumbers="True"
                
                LineNumbersForeground="{Binding textBoxForeground}"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                Text="{Binding code}"
                SyntaxHighlighting="{Binding CurrentLang, Converter={StaticResource HighlightingDefinitionConverter}}"/>
    </Border>
    
    <Grid Grid.Row="3">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" Content="{Binding leftText}" HorizontalAlignment="Right" Foreground="Red" FontSize="13" FontFamily="{StaticResource poppins_regular}"/>

        <Border Grid.Column="1" Background="{Binding textBoxBackground}" BorderThickness="0" Width="120" CornerRadius="7" Height="32" HorizontalAlignment="Center" Margin="5,0,30,7">
            <Button Content="Add code" Background="Transparent" BorderThickness="0" FontFamily="{StaticResource poppins_regular}" Foreground="{Binding textBoxForeground}"
                    FontSize="18" BorderBrush="{Binding richtextBoxBackground}" Command="{s:Action DoneClicked}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="border" CornerRadius="10" BorderThickness="0" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </Button.Style>
            </Button>
        </Border>
    </Grid>
</Grid>
